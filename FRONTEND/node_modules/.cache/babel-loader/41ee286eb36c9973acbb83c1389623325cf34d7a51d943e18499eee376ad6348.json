{"ast":null,"code":"var _jsxFileName = \"/Users/mickey/WebstormProjects/EVCSM/FRONTEND/src/ChargingSession.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport mqtt from \"mqtt\";\nimport './ChargingSession.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChargingSession() {\n  _s();\n  const [charging, setCharging] = useState(false);\n  const [energyConsumed, setEnergyConsumed] = useState(\"0\");\n  const [status, setStatus] = useState(\"Idle\");\n  const [client, setClient] = useState(null);\n\n  //useEffect so MqttClient doesn't reset for every re-render\n\n  useEffect(() => {\n    const mqttClient = mqtt.connect(\"ws://127.0.0.1:9001\", {\n      protocol: \"ws\",\n      protocolVersion: 5,\n      clean: false,\n      reconnectPeriod: 1000\n    });\n    mqttClient.on(\"connect\", () => {\n      console.log(\"Connected to MQTT broker.\");\n      mqttClient.subscribe(\"charging/updates\", () => {\n        console.log(\"Subscribed to Charging Updates\");\n      });\n      mqttClient.subscribe(\"energyconsumed\", () => {\n        console.log(\"Subscribed to Energy Consumed Updates\");\n      });\n    });\n    mqttClient.on(\"message\", (topic, message) => {\n      if (topic === \"charging/updates\") {\n        const payload = JSON.parse(message.toString());\n        console.log(\"Received update:\", payload);\n        if (payload.status) {\n          setStatus(() => payload.status);\n        }\n      } else if (topic === \"energyconsumed\") {\n        const payload = JSON.parse(message.toString());\n        console.log(\"Received energy consumption update:\", payload);\n        if (typeof payload.energyConsumed === \"number\") {\n          setEnergyConsumed(payload.energyConsumed);\n          console.log(payload.energyConsumed);\n        }\n      }\n    });\n    setClient(() => mqttClient);\n    return () => {\n      console.log(\"Disconnecting MQTT client...\");\n      mqttClient.end();\n    };\n  }, []);\n  const publishMessage = status => {\n    if (client) {\n      const topic = \"charging/updates\";\n      const payload = JSON.stringify({\n        status,\n        startTime: new Date().toISOString()\n      });\n      client.publish(topic, payload);\n    }\n  };\n  const startCharging = () => {\n    setCharging(true);\n    setEnergyConsumed(energyConsumed);\n    publishMessage(\"Charging\");\n  };\n  const stopCharging = () => {\n    setCharging(false);\n    setEnergyConsumed(energyConsumed);\n    publishMessage(\"Stopped\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Electric Vehicle Charging Session\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Energy Consumed: \", energyConsumed, \" kWh\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startCharging,\n      disabled: charging,\n      children: \"Start Charging\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopCharging,\n      disabled: !charging,\n      children: \"Stop Charging\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n_s(ChargingSession, \"OXgldIABnzWPnTF7K91Okny5Hog=\");\n_c = ChargingSession;\nvar _c;\n$RefreshReg$(_c, \"ChargingSession\");","map":{"version":3,"names":["useState","useEffect","mqtt","jsxDEV","_jsxDEV","ChargingSession","_s","charging","setCharging","energyConsumed","setEnergyConsumed","status","setStatus","client","setClient","mqttClient","connect","protocol","protocolVersion","clean","reconnectPeriod","on","console","log","subscribe","topic","message","payload","JSON","parse","toString","end","publishMessage","stringify","startTime","Date","toISOString","publish","startCharging","stopCharging","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/mickey/WebstormProjects/EVCSM/FRONTEND/src/ChargingSession.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport mqtt, { MqttClient } from \"mqtt\";\nimport './ChargingSession.css';\n\nexport default function ChargingSession() {\n    const [charging, setCharging] = useState<boolean>(false);\n    const [energyConsumed, setEnergyConsumed] = useState<string>(\"0\");\n    const [status, setStatus] = useState<string>(\"Idle\");\n    const [client, setClient] = useState<MqttClient | null>(null);\n\n    //useEffect so MqttClient doesn't reset for every re-render\n\n    useEffect(() => {\n        const mqttClient = mqtt.connect(\"ws://127.0.0.1:9001\", {\n            protocol: \"ws\",\n            protocolVersion: 5,\n            clean: false,\n            reconnectPeriod: 1000,\n        });\n\n        mqttClient.on(\"connect\", () => {\n            console.log(\"Connected to MQTT broker.\");\n            mqttClient.subscribe(\"charging/updates\", () => {\n                console.log(\"Subscribed to Charging Updates\");\n            });\n            mqttClient.subscribe(\"energyconsumed\", () => {\n                console.log(\"Subscribed to Energy Consumed Updates\");\n            });\n        });\n\n        mqttClient.on(\"message\", (topic, message) => {\n            if (topic === \"charging/updates\") {\n                const payload = JSON.parse(message.toString());\n                console.log(\"Received update:\", payload);\n\n                if (payload.status) {\n                    setStatus(() => payload.status);\n                }\n            }else if (topic === \"energyconsumed\") {\n                const payload = JSON.parse(message.toString());\n                console.log(\"Received energy consumption update:\", payload);\n                if (typeof payload.energyConsumed === \"number\") {\n                    setEnergyConsumed(payload.energyConsumed);\n                    console.log(payload.energyConsumed);\n                }}\n        });\n\n        setClient(() => mqttClient);\n\n        return () => {\n            console.log(\"Disconnecting MQTT client...\");\n            mqttClient.end();\n        };\n    }, []);\n\n    const publishMessage = (status: string) => {\n        if (client) {\n            const topic = \"charging/updates\";\n            const payload = JSON.stringify({ status, startTime: new Date().toISOString() });\n            client.publish(topic, payload);\n        }\n    };\n\n    const startCharging = () => {\n        setCharging(true);\n        setEnergyConsumed(energyConsumed);\n        publishMessage(\"Charging\");\n    };\n\n    const stopCharging = () => {\n        setCharging(false);\n        setEnergyConsumed(energyConsumed);\n        publishMessage(\"Stopped\");\n    };\n\n    return (\n        <div>\n            <h1>Electric Vehicle Charging Session</h1>\n            <p>Status: {status}</p>\n            <p>Energy Consumed: {energyConsumed} kWh</p>\n            <button onClick={startCharging} disabled={charging}>Start Charging</button>\n            <button onClick={stopCharging} disabled={!charging}>Stop Charging</button>\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}