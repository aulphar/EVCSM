{"ast":null,"code":"var _jsxFileName = \"/Users/mickey/WebstormProjects/chargingsessionfrontend/src/ChargingComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChargingComponent = () => {\n  _s();\n  const [isCharging, setIsCharging] = useState(false);\n  const [energyConsumed, setEnergyConsumed] = useState(0);\n  const [intervalId, setIntervalId] = useState(null);\n  const startCharging = () => {\n    setIsCharging(true);\n    // Simulate energy consumption\n    const interval = setInterval(() => {\n      setEnergyConsumed(prevEnergy => prevEnergy + 1);\n    }, 1000);\n\n    // Store the interval ID to clear it later\n    setIntervalId(interval);\n  };\n  const stopCharging = () => {\n    setIsCharging(false);\n    if (intervalId) {\n      clearInterval(intervalId);\n    }\n  };\n\n  // Define styles with proper TypeScript types\n  const styles = {\n    container: {\n      textAlign: 'center',\n      // Use a valid CSS value for textAlign\n      marginTop: '50px'\n    },\n    status: {\n      margin: '20px 0'\n    },\n    buttons: {\n      marginTop: '20px'\n    },\n    button: {\n      margin: '0 10px',\n      padding: '10px 20px',\n      fontSize: '16px',\n      cursor: 'pointer'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Charging Station\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.status,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", isCharging ? 'Charging' : 'Not Charging']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Energy Consumed: \", energyConsumed, \" kWh\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.buttons,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles.button,\n        onClick: startCharging,\n        disabled: isCharging,\n        children: \"Start Charging\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles.button,\n        onClick: stopCharging,\n        disabled: !isCharging,\n        children: \"Stop Charging\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(ChargingComponent, \"LznsksNmidA+l692X0H7M0o0uUQ=\");\n_c = ChargingComponent;\nexport default ChargingComponent;\nvar _c;\n$RefreshReg$(_c, \"ChargingComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChargingComponent","_s","isCharging","setIsCharging","energyConsumed","setEnergyConsumed","intervalId","setIntervalId","startCharging","interval","setInterval","prevEnergy","stopCharging","clearInterval","styles","container","textAlign","marginTop","status","margin","buttons","button","padding","fontSize","cursor","style","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/mickey/WebstormProjects/chargingsessionfrontend/src/ChargingComponent.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst ChargingComponent: React.FC = () => {\n    const [isCharging, setIsCharging] = useState<boolean>(false);\n    const [energyConsumed, setEnergyConsumed] = useState<number>(0);\n    const [intervalId, setIntervalId] = useState<NodeJS.Timeout | null>(null);\n\n    const startCharging = () => {\n        setIsCharging(true);\n        // Simulate energy consumption\n        const interval = setInterval(() => {\n            setEnergyConsumed((prevEnergy) => prevEnergy + 1);\n        }, 1000);\n\n        // Store the interval ID to clear it later\n        setIntervalId(interval);\n    };\n\n    const stopCharging = () => {\n        setIsCharging(false);\n        if (intervalId) {\n            clearInterval(intervalId);\n        }\n    };\n\n    // Define styles with proper TypeScript types\n    const styles: { [key: string]: React.CSSProperties } = {\n        container: {\n            textAlign: 'center', // Use a valid CSS value for textAlign\n            marginTop: '50px',\n        },\n        status: {\n            margin: '20px 0',\n        },\n        buttons: {\n            marginTop: '20px',\n        },\n        button: {\n            margin: '0 10px',\n            padding: '10px 20px',\n            fontSize: '16px',\n            cursor: 'pointer',\n        },\n    };\n\n    return (\n        <div style={styles.container}>\n            <h1>Charging Station</h1>\n            <div style={styles.status}>\n                <p>Status: {isCharging ? 'Charging' : 'Not Charging'}</p>\n                <p>Energy Consumed: {energyConsumed} kWh</p>\n            </div>\n            <div style={styles.buttons}>\n                <button\n                    style={styles.button}\n                    onClick={startCharging}\n                    disabled={isCharging}\n                >\n                    Start Charging\n                </button>\n                <button\n                    style={styles.button}\n                    onClick={stopCharging}\n                    disabled={!isCharging}\n                >\n                    Stop Charging\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default ChargingComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}