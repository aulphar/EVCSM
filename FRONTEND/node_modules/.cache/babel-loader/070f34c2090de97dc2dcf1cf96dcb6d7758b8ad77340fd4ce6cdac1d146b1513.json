{"ast":null,"code":"import{useState,useEffect}from\"react\";import mqtt from\"mqtt\";import'./ChargingSession.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function ChargingSession(){const[charging,setCharging]=useState(false);const[energyConsumed,setEnergyConsumed]=useState(\"0\");const[status,setStatus]=useState(\"Idle\");const[client,setClient]=useState(null);useEffect(()=>{const mqttClient=mqtt.connect(\"ws://mosquitto:9001\",{protocol:\"ws\",protocolVersion:5,clean:true,will:{topic:\"charging/updates\",payload:JSON.stringify({status:\"Stopped\",reason:\"Unexpected Disconnect\",endTime:Date.now()}),qos:1,retain:false}});mqttClient.on(\"connect\",()=>{console.log(\"Connected to MQTT broker.\");mqttClient.subscribe(\"charging/updates\",()=>{console.log(\"Subscribed to Charging Updates\");});mqttClient.subscribe(\"session/updates\",()=>{console.log(\"Subscribed to Energy Consumed Updates\");});});mqttClient.on(\"message\",(topic,message)=>{if(topic===\"charging/updates\"){const payload=JSON.parse(message.toString());console.log(\"Received update:\",payload);if(payload.status){setStatus(()=>payload.status);}}if(topic===\"session/updates\"){const payload=JSON.parse(message.toString());console.log(\"Received energy consumption update:\",payload);if(typeof payload.energyConsumed===\"number\"){setEnergyConsumed(payload.energyConsumed);console.log(payload);}}});setClient(()=>mqttClient);return()=>{console.log(\"Disconnecting MQTT client...\");mqttClient.end();};},[]);const publishMessage=payload=>{if(client){client.publish(\"charging/updates\",JSON.stringify(payload));}};const startCharging=()=>{setCharging(true);publishMessage({status:\"Charging\",startTime:new Date().toISOString()});};const stopCharging=()=>{setCharging(false);publishMessage({status:\"Stopped\",endTime:new Date().toISOString()});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Electric Vehicle Charging Session\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Status: \",status]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Energy Consumed: \",energyConsumed,\" kWh\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:startCharging,disabled:charging,children:\"Start Charging\"}),/*#__PURE__*/_jsx(\"button\",{onClick:stopCharging,disabled:!charging,children:\"Stop Charging\"})]});}","map":{"version":3,"names":["useState","useEffect","mqtt","jsx","_jsx","jsxs","_jsxs","ChargingSession","charging","setCharging","energyConsumed","setEnergyConsumed","status","setStatus","client","setClient","mqttClient","connect","protocol","protocolVersion","clean","will","topic","payload","JSON","stringify","reason","endTime","Date","now","qos","retain","on","console","log","subscribe","message","parse","toString","end","publishMessage","publish","startCharging","startTime","toISOString","stopCharging","children","onClick","disabled"],"sources":["/Users/mickey/WebstormProjects/EVCSM/FRONTEND/src/ChargingSession.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport mqtt, { MqttClient } from \"mqtt\";\nimport './ChargingSession.css';\n\nexport default function ChargingSession() {\n    const [charging, setCharging] = useState<boolean>(false);\n    const [energyConsumed, setEnergyConsumed] = useState<string>(\"0\");\n    const [status, setStatus] = useState<string>(\"Idle\");\n    const [client, setClient] = useState<MqttClient | null>(null);\n\n    useEffect(() => {\n        const mqttClient = mqtt.connect(\"ws://mosquitto:9001\", {\n            protocol: \"ws\",\n            protocolVersion: 5,\n            clean: true,\n            will: {\n                topic: \"charging/updates\",\n                payload: JSON.stringify({status: \"Stopped\", reason: \"Unexpected Disconnect\", endTime: Date.now()}),\n                qos: 1,\n                retain: false\n            }\n        });\n\n        mqttClient.on(\"connect\", () => {\n            console.log(\"Connected to MQTT broker.\");\n            mqttClient.subscribe(\"charging/updates\", () => {\n                console.log(\"Subscribed to Charging Updates\");\n            });\n            mqttClient.subscribe(\"session/updates\", () => {\n                console.log(\"Subscribed to Energy Consumed Updates\");\n            });\n        });\n\n        mqttClient.on(\"message\", (topic, message) => {\n            if (topic === \"charging/updates\") {\n                const payload = JSON.parse(message.toString());\n                console.log(\"Received update:\", payload);\n\n                if (payload.status) {\n                    setStatus(() => payload.status);\n                }\n            }\n             if (topic === \"session/updates\") {\n                const payload = JSON.parse(message.toString());\n                console.log(\"Received energy consumption update:\", payload);\n                if (typeof payload.energyConsumed === \"number\") {\n                    setEnergyConsumed(payload.energyConsumed);\n                    console.log(payload);\n                }\n             }\n        });\n\n        setClient(() => mqttClient);\n\n        return () => {\n            console.log(\"Disconnecting MQTT client...\");\n            mqttClient.end();\n        };\n    }, []);\n\n    const publishMessage = (payload: object) => {\n        if (client) {\n            client.publish(\"charging/updates\", JSON.stringify(payload));\n        }\n    };\n\n    const startCharging = () => {\n        setCharging(true);\n        publishMessage({\n            status: \"Charging\",\n            startTime: new Date().toISOString(),\n        });\n    };\n\n    const stopCharging = () => {\n        setCharging(false);\n        publishMessage({\n            status: \"Stopped\",\n            endTime: new Date().toISOString(),\n        });\n    };\n\n\n    return (\n        <div>\n            <h1>Electric Vehicle Charging Session</h1>\n            <p>Status: {status}</p>\n            <p>Energy Consumed: {energyConsumed} kWh</p>\n            <button onClick={startCharging} disabled={charging}>Start Charging</button>\n            <button onClick={stopCharging} disabled={!charging}>Stop Charging</button>\n        </div>\n    );\n}\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,MAAO,CAAAC,IAAI,KAAsB,MAAM,CACvC,MAAO,uBAAuB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/B,cAAe,SAAS,CAAAC,eAAeA,CAAA,CAAG,CACtC,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGT,QAAQ,CAAU,KAAK,CAAC,CACxD,KAAM,CAACU,cAAc,CAAEC,iBAAiB,CAAC,CAAGX,QAAQ,CAAS,GAAG,CAAC,CACjE,KAAM,CAACY,MAAM,CAAEC,SAAS,CAAC,CAAGb,QAAQ,CAAS,MAAM,CAAC,CACpD,KAAM,CAACc,MAAM,CAAEC,SAAS,CAAC,CAAGf,QAAQ,CAAoB,IAAI,CAAC,CAE7DC,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAe,UAAU,CAAGd,IAAI,CAACe,OAAO,CAAC,qBAAqB,CAAE,CACnDC,QAAQ,CAAE,IAAI,CACdC,eAAe,CAAE,CAAC,CAClBC,KAAK,CAAE,IAAI,CACXC,IAAI,CAAE,CACFC,KAAK,CAAE,kBAAkB,CACzBC,OAAO,CAAEC,IAAI,CAACC,SAAS,CAAC,CAACb,MAAM,CAAE,SAAS,CAAEc,MAAM,CAAE,uBAAuB,CAAEC,OAAO,CAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,CAAC,CAClGC,GAAG,CAAE,CAAC,CACNC,MAAM,CAAE,KACZ,CACJ,CAAC,CAAC,CAEFf,UAAU,CAACgB,EAAE,CAAC,SAAS,CAAE,IAAM,CAC3BC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC,CACxClB,UAAU,CAACmB,SAAS,CAAC,kBAAkB,CAAE,IAAM,CAC3CF,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC,CACjD,CAAC,CAAC,CACFlB,UAAU,CAACmB,SAAS,CAAC,iBAAiB,CAAE,IAAM,CAC1CF,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC,CACxD,CAAC,CAAC,CACN,CAAC,CAAC,CAEFlB,UAAU,CAACgB,EAAE,CAAC,SAAS,CAAE,CAACV,KAAK,CAAEc,OAAO,GAAK,CACzC,GAAId,KAAK,GAAK,kBAAkB,CAAE,CAC9B,KAAM,CAAAC,OAAO,CAAGC,IAAI,CAACa,KAAK,CAACD,OAAO,CAACE,QAAQ,CAAC,CAAC,CAAC,CAC9CL,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAEX,OAAO,CAAC,CAExC,GAAIA,OAAO,CAACX,MAAM,CAAE,CAChBC,SAAS,CAAC,IAAMU,OAAO,CAACX,MAAM,CAAC,CACnC,CACJ,CACC,GAAIU,KAAK,GAAK,iBAAiB,CAAE,CAC9B,KAAM,CAAAC,OAAO,CAAGC,IAAI,CAACa,KAAK,CAACD,OAAO,CAACE,QAAQ,CAAC,CAAC,CAAC,CAC9CL,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAEX,OAAO,CAAC,CAC3D,GAAI,MAAO,CAAAA,OAAO,CAACb,cAAc,GAAK,QAAQ,CAAE,CAC5CC,iBAAiB,CAACY,OAAO,CAACb,cAAc,CAAC,CACzCuB,OAAO,CAACC,GAAG,CAACX,OAAO,CAAC,CACxB,CACH,CACL,CAAC,CAAC,CAEFR,SAAS,CAAC,IAAMC,UAAU,CAAC,CAE3B,MAAO,IAAM,CACTiB,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC,CAC3ClB,UAAU,CAACuB,GAAG,CAAC,CAAC,CACpB,CAAC,CACL,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,cAAc,CAAIjB,OAAe,EAAK,CACxC,GAAIT,MAAM,CAAE,CACRA,MAAM,CAAC2B,OAAO,CAAC,kBAAkB,CAAEjB,IAAI,CAACC,SAAS,CAACF,OAAO,CAAC,CAAC,CAC/D,CACJ,CAAC,CAED,KAAM,CAAAmB,aAAa,CAAGA,CAAA,GAAM,CACxBjC,WAAW,CAAC,IAAI,CAAC,CACjB+B,cAAc,CAAC,CACX5B,MAAM,CAAE,UAAU,CAClB+B,SAAS,CAAE,GAAI,CAAAf,IAAI,CAAC,CAAC,CAACgB,WAAW,CAAC,CACtC,CAAC,CAAC,CACN,CAAC,CAED,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACvBpC,WAAW,CAAC,KAAK,CAAC,CAClB+B,cAAc,CAAC,CACX5B,MAAM,CAAE,SAAS,CACjBe,OAAO,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACgB,WAAW,CAAC,CACpC,CAAC,CAAC,CACN,CAAC,CAGD,mBACItC,KAAA,QAAAwC,QAAA,eACI1C,IAAA,OAAA0C,QAAA,CAAI,mCAAiC,CAAI,CAAC,cAC1CxC,KAAA,MAAAwC,QAAA,EAAG,UAAQ,CAAClC,MAAM,EAAI,CAAC,cACvBN,KAAA,MAAAwC,QAAA,EAAG,mBAAiB,CAACpC,cAAc,CAAC,MAAI,EAAG,CAAC,cAC5CN,IAAA,WAAQ2C,OAAO,CAAEL,aAAc,CAACM,QAAQ,CAAExC,QAAS,CAAAsC,QAAA,CAAC,gBAAc,CAAQ,CAAC,cAC3E1C,IAAA,WAAQ2C,OAAO,CAAEF,YAAa,CAACG,QAAQ,CAAE,CAACxC,QAAS,CAAAsC,QAAA,CAAC,eAAa,CAAQ,CAAC,EACzE,CAAC,CAEd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}