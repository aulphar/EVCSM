{"ast":null,"code":"var _jsxFileName = \"/Users/mickey/WebstormProjects/EVCSM/src/ChargingSession.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport mqtt from \"mqtt\";\nimport './ChargingSession.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChargingSession() {\n  _s();\n  const [charging, setCharging] = useState(false);\n  const [energyConsumed, setEnergyConsumed] = useState(0);\n  const [status, setStatus] = useState(\"Idle\");\n  const client = mqtt.connect('ws://127.0.0.1:9001', {\n    protocol: \"ws\",\n    protocolVersion: 5,\n    clean: true\n  });\n  client.on(\"connect\", () => {\n    client.subscribe(\"charging/updates\", () => {\n      console.log(\"Suscribed to Charging Updates\");\n    });\n    console.log(\"Connected to MQTT broker.\");\n  });\n  client.on(\"message\", (topic, message) => {\n    if (topic === \"charging/updates\") {\n      const payload = JSON.parse(message.toString());\n      console.log(\"Received update:\", payload);\n      if (payload.status) {\n        setStatus(payload.status);\n      }\n    }\n  });\n  const startCharging = () => {\n    const topic = 'charging/updates';\n    const payload = JSON.stringify({\n      status: \"Charging\",\n      timestamp: new Date().toISOString()\n    });\n    client.publish(topic, payload);\n    setCharging(true);\n  };\n  const stopCharging = () => {\n    const topic = 'charging/updates';\n    const payload = JSON.stringify({\n      status: \"Stopped\",\n      timestamp: new Date().toISOString()\n    });\n    client.publish(topic, payload);\n    setCharging(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Electric Vehicle Charging Session\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Energy Consumed: \", energyConsumed.toFixed(2), \" kWh\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startCharging,\n      disabled: charging,\n      children: \"Start Charging\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopCharging,\n      disabled: !charging,\n      children: \"Stop Charging\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(ChargingSession, \"Spwm6LjIjyJgZaE7AZSk9u8io6M=\");\n_c = ChargingSession;\nvar _c;\n$RefreshReg$(_c, \"ChargingSession\");","map":{"version":3,"names":["useState","mqtt","jsxDEV","_jsxDEV","ChargingSession","_s","charging","setCharging","energyConsumed","setEnergyConsumed","status","setStatus","client","connect","protocol","protocolVersion","clean","on","subscribe","console","log","topic","message","payload","JSON","parse","toString","startCharging","stringify","timestamp","Date","toISOString","publish","stopCharging","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/mickey/WebstormProjects/EVCSM/src/ChargingSession.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport mqtt from \"mqtt\";\nimport './ChargingSession.css';\n\nexport default function ChargingSession() {\n    const [charging, setCharging] = useState<boolean>(false);\n    const [energyConsumed, setEnergyConsumed] = useState<number>(0);\n    const [status, setStatus] = useState<string>(\"Idle\");\n\n    const client = mqtt.connect('ws://127.0.0.1:9001', {\n        protocol: \"ws\",\n        protocolVersion: 5,\n        clean: true,\n    });\n    client.on(\"connect\", () => {\n        client.subscribe(\"charging/updates\",() => {console.log(\"Suscribed to Charging Updates\")});\n        console.log(\"Connected to MQTT broker.\");\n    });\n\n    client.on(\"message\", (topic, message) => {\n        if (topic === \"charging/updates\") {\n            const payload = JSON.parse(message.toString());\n            console.log(\"Received update:\", payload);\n            if (payload.status)\n            {\n                setStatus(payload.status);\n            }\n        }\n\n    });\n\n    const startCharging = () => {\n\n        const topic = 'charging/updates';\n        const payload = JSON.stringify({ status: \"Charging\", timestamp: new Date().toISOString() });\n        client.publish(topic, payload);\n        setCharging(true);\n    };\n\n    const stopCharging = () => {\n        const topic = 'charging/updates';\n        const payload = JSON.stringify({ status: \"Stopped\", timestamp: new Date().toISOString() });\n        client.publish(topic, payload);\n        setCharging(false);\n    };\n\n    return (\n        <div>\n            <h1>Electric Vehicle Charging Session</h1>\n            <p>Status: {status}</p>\n            <p>Energy Consumed: {energyConsumed.toFixed(2)} kWh</p>\n            <button onClick={startCharging} disabled={charging}>Start Charging</button>\n            <button onClick={stopCharging} disabled={!charging}>Stop Charging</button>\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}